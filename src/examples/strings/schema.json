{
    "type": "object",
    "required": ["string_field"],
    "properties": {
        "string_field": {
            "title": "String field",
            "description": "A required text field between 1 and 10 characters",
            "type": "string",
            "minLength": 1,
            "maxLength": 10
        },
        "string_field_with_default": {
            "title": "String field with default value",
            "description": "An optional text field with a default value",
            "type": "string",
            "default": "Default value"
        },
        "string_field_readonly": {
            "title": "String field in readonly mode (defined in the UI Schema)",
            "description": "An optional text field with a readonly value in readonly mode (defined in the UI Schema)",
            "type": "string",
            "default": "Default value, disabled"
        },
        "string_field_placeholder": {
            "title": "String field with placeholder (defined in the UI Schema)",
            "description": "An optional text field with a placeholder in readonly mode (defined in the UI Schema)",
            "type": "string"
        },
        "password_field": {
            "title": "Password field (PrimeVue Password)",
            "description": "Render as PrimeVue Password by setting 'options.password': true in the UI schema. Optionally set 'options.toggleMask' (default true) to show the toggle mask icon.",
            "type": "string"
        },
        "password_field_no_toggle": {
            "title": "Password field without toggle mask",
            "description": "Same as above but with 'options.toggleMask': false to hide the toggle icon.",
            "type": "string"
        },
        "phone_mask": {
            "title": "String field with input mask",
            "description": "Render as PrimeVue InputMask by setting 'options.inputMask' in the UI schema (e.g. '(999) 999-9999').",
            "type": "string"
        },
        "date_mask_with_placeholder": {
            "title": "String field with input mask and custom placeholder",
            "description": "Uses 'options.inputMask' (e.g. '99/99/9999') and overrides the placeholder via 'options.placeholder' (e.g. 'MM/DD/YYYY'). Could be further restricted to realistic dates using 'pattern' in the JSON Schema, but this is not done here for simplicity.",
            "type": "string"
        },
        "string_restricted": {
            "title": "String field restricted with enumValues in the UI Schema",
            "description": "Render as PrimeVue Select by setting 'options.enumValues' in the UI schema.",
            "type": "string"
        },
        "string_restricted_with_labels": {
            "title": "String field restricted with enumValues and enumLabels in the UI Schema",
            "description": "Render as PrimeVue Select by setting 'options.enumValues' in the UI schema. Here, the optional labels are provided in the UI schema using 'options.enumLabels'.",
            "type": "string"
        },
        "string_field_with_examples": {
            "title": "String field with examples",
            "description": "An optional text field with examples defined in the schema",
            "type": "string",
            "examples": ["Example 1", "Example 2", "Example 3"]
        },
        "string_field_with_suggestions": {
            "title": "String field with suggestions",
            "description": "An optional text field with examples defined in the schema",
            "type": "string"
        },
        "string_field_with_examples_and_suggestions_required": {
            "title": "String field with examples and suggestions (required)",
            "description": "A required text field with examples and suggestions defined in the schema",
            "type": "string",
            "examples": ["Example 1", "Example 2", "Example 3"],
            "default": "Default example value"
        },
        "textarea_field1": {
            "title": "Textarea field 1",
            "description": "An optional text field defined as textarea in the schema. Note that \"textarea\" is not a valid format according to the JSON Schema specifications, but it is used in another frequently used JSON Schema form library, and as such used frequently in JSON Schemas. The validation library AJV will print a warning when it encounters it, but it will still validate the field. This demo applies a workaround to suppress the warning.",
            "type": "string",
            "format": "textarea"
        },
        "textarea_field2": {
            "title": "Textarea field 2",
            "description": "An optional text field defined as textarea in the uischema",
            "type": "string"
        },
        "textarea_field_with_default": {
            "title": "Textarea field with default value",
            "description": "An optional text field with a default value  in the schema",
            "type": "string",
            "format": "textarea",
            "default": "Default value"
        }
    }
}